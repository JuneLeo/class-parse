package org.example;


import org.example.bytecode.ClassFormat;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.UnsupportedEncodingException;

public class Main {

    public static byte[] defaultByteCode = {-54, -2, -70, -66, 0, 0, 0, 52, 0, 49, 10, 0, 10, 0, 27, 9, 0, 9, 0, 28, 9, 0, 9, 0, 29,
            8, 0, 30, 10, 0, 31, 0, 32, 9, 0, 33, 0, 34, 8, 0, 35, 10, 0, 36, 0, 37, 7, 0, 38, 7, 0, 39, 1, 0, 4, 110, 97, 109,
            101, 1, 0, 18, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 3, 97, 103,
            101, 1, 0, 1, 73, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 22, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103,
            47, 83, 116, 114, 105, 110, 103, 59, 73, 41, 86, 1, 0, 4, 67, 111, 100, 101, 1, 0, 15, 76, 105, 110, 101, 78, 117,
            109, 98, 101, 114, 84, 97, 98, 108, 101, 1, 0, 18, 76, 111, 99, 97, 108, 86, 97, 114, 105, 97, 98, 108, 101, 84, 97,
            98, 108, 101, 1, 0, 4, 116, 104, 105, 115, 1, 0, 20, 76, 111, 114, 103, 47, 101, 120, 97, 109, 112, 108, 101, 47, 80,
            101, 114, 115, 111, 110, 59, 1, 0, 4, 112, 108, 97, 121, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47,
            83, 116, 114, 105, 110, 103, 59, 41, 86, 1, 0, 13, 83, 116, 97, 99, 107, 77, 97, 112, 84, 97, 98, 108, 101, 1, 0, 10, 83,
            111, 117, 114, 99, 101, 70, 105, 108, 101, 1, 0, 11, 80, 101, 114, 115, 111, 110, 46, 106, 97, 118, 97, 12, 0, 15, 0, 40,
            12, 0, 11, 0, 12, 12, 0, 13, 0, 14, 1, 0, 6, 98, 97, 115, 107, 101, 116, 7, 0, 41, 12, 0, 42, 0, 43, 7, 0, 44, 12, 0, 45,
            0, 46, 1, 0, 6, -25, -81, -82, -25, -112, -125, 7, 0, 47, 12, 0, 48, 0, 23, 1, 0, 18, 111, 114, 103, 47, 101, 120, 97, 109,
            112, 108, 101, 47, 80, 101, 114, 115, 111, 110, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99,
            116, 1, 0, 3, 40, 41, 86, 1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 1, 0, 6, 101,
            113, 117, 97, 108, 115, 1, 0, 21, 40, 76, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 59, 41, 90,
            1, 0, 16, 106, 97, 118, 97, 47, 108, 97, 110, 103, 47, 83, 121, 115, 116, 101, 109, 1, 0, 3, 111, 117, 116, 1, 0, 21, 76, 106,
            97, 118, 97, 47, 105, 111, 47, 80, 114, 105, 110, 116, 83, 116, 114, 101, 97, 109, 59, 1, 0, 19, 106, 97, 118, 97, 47, 105, 111,
            47, 80, 114, 105, 110, 116, 83, 116, 114, 101, 97, 109, 1, 0, 7, 112, 114, 105, 110, 116, 108, 110, 0, 33, 0, 9, 0, 10, 0, 0, 0,
            2, 0, 1, 0, 11, 0, 12, 0, 0, 0, 1, 0, 13, 0, 14, 0, 0, 0, 2, 0, 1, 0, 15, 0, 16, 0, 1, 0, 17, 0, 0, 0, 89, 0, 2, 0, 3, 0, 0, 0,
            15, 42, -73, 0, 1, 42, 43, -75, 0, 2, 42, 28, -75, 0, 3, -79, 0, 0, 0, 2, 0, 18, 0, 0, 0, 18, 0, 4, 0, 0, 0, 8, 0, 4, 0, 9, 0, 9,
            0, 10, 0, 14, 0, 11, 0, 19, 0, 0, 0, 32, 0, 3, 0, 0, 0, 15, 0, 20, 0, 21, 0, 0, 0, 0, 0, 15, 0, 11, 0, 12, 0, 1, 0, 0, 0, 15, 0,
            13, 0, 14, 0, 2, 0, 1, 0, 22, 0, 23, 0, 1, 0, 17, 0, 0, 0, 87, 0, 2, 0, 2, 0, 0, 0, 18, 43, 18, 4, -74, 0, 5, -103, 0, 11, -78, 0,
            6, 18, 7, -74, 0, 8, -79, 0, 0, 0, 3, 0, 18, 0, 0, 0, 14, 0, 3, 0, 0, 0, 15, 0, 9, 0, 16, 0, 17, 0, 18, 0, 19, 0, 0, 0, 22, 0, 2,
            0, 0, 0, 18, 0, 20, 0, 21, 0, 0, 0, 0, 0, 18, 0, 11, 0, 12, 0, 1, 0, 24, 0, 0, 0, 3, 0, 1, 17, 0, 1, 0, 25, 0, 0, 0, 2, 0, 26};


    public static void main(String[] args) {
        // 1.默认class 字节码
        ClassFormat classFormat = new ClassFormat();
        classFormat.parse(defaultByteCode);
        // 2.解析本地字节码
//        byte[] byteCode = readFile("/Users/juneleo/Desktop/MiniAppImpl.class"); // 将路径替换为本地class路径
//        if (byteCode != null) {
//            ClassFormat classFormat2 = new ClassFormat();
//            classFormat2.parse(byteCode);
//        }
    }

    private static byte[] readFile(String path) {
        try {
            byte[] bytes = new byte[1024];
            byte[] data = null;
            FileInputStream fileInputStream = new FileInputStream(path);
            int length = 0;
            while ((length = fileInputStream.read(bytes)) > 0) {
                if (data == null) {
                    data = new byte[length];
                    System.arraycopy(bytes, 0, data, 0, length);
                } else {
                    byte[] copy = new byte[data.length + length];
                    System.arraycopy(data, 0, copy, 0, data.length);
                    System.arraycopy(bytes, 0, copy, data.length, length);
                    data = copy;
                }
            }

            return data;
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }


}